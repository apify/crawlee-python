name: Create a pre-release

on:
  # Trigger a beta version release (pre-release) on push to the master branch.
  push:
    branches:
      - master
    tags-ignore:
      - "**" # Ignore all tags to prevent duplicate builds when tags are pushed.

  # Or it can be triggered manually.
  workflow_dispatch:

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  release_metadata:
    name: Prepare release metadata
    runs-on: ubuntu-latest
    outputs:
      version_number: ${{ steps.release_metadata.outputs.version_number }}
      tag_name: ${{ steps.release_metadata.outputs.tag_name }}
      changelog: ${{ steps.release_metadata.outputs.changelog }}
    steps:
      - uses: apify/workflows/git-cliff-release@main
        id: release_metadata
        name: Prepare release metadata
        with:
          release_type: prerelease
          existing_changelog_path: CHANGELOG.md

  # If github.ref points to a [ci skip] commit, this workflow won't run.
  # Otherwise, these checks will be launched from the `run_code_checks` workflow.
  wait_for_checks:
    name: Wait for code checks to pass
    runs-on: ubuntu-latest
    steps:
      - uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          check-regexp: "( check| tests)$"
          wait-interval: 5

  update_changelog:
    name: Update changelog
    needs: [release_metadata, wait_for_checks]
    uses: apify/workflows/.github/workflows/python_bump_and_update_changelog.yaml@main
    with:
      version_number: ${{ needs.release_metadata.outputs.version_number }}
      changelog: ${{ needs.release_metadata.outputs.changelog }}
    secrets:
      APIFY_SERVICE_ACCOUNT_GITHUB_TOKEN: ${{ secrets.APIFY_SERVICE_ACCOUNT_GITHUB_TOKEN }}

  build_and_deploy_docs:
    needs: [update_changelog]
    uses: ./.github/workflows/build_and_deploy_docs.yaml
    with:
      ref: ${{ needs.update_changelog.outputs.changelog_commitish }}
    secrets: inherit

  publish_to_pypi:
    if: "!startsWith(github.event.head_commit.message, 'ci') && !startsWith(github.event.head_commit.message, 'docs')"
    name: Publish to PyPI
    needs: [release_metadata, update_changelog]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write # Required for OIDC authentication.
    environment:
      name: pypi
      url: https://pypi.org/project/crawlee
    steps:
      - name: Prepare distribution
        uses: apify/workflows/prepare-pypi-distribution@main
        with:
          package_name: crawlee
          is_prerelease: "yes"
          version_number: ${{ needs.release_metadata.outputs.version_number }}
          ref: ${{ needs.update_changelog.outputs.changelog_commitish }}
      # Publishes the package to PyPI using PyPA official GitHub action with OIDC authentication.
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      # TODO: add job for publish package to Conda
      # https://github.com/apify/crawlee-python/issues/104
